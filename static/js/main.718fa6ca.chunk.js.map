{"version":3,"sources":["components/Navbar.js","types/types.js","actions/generos.js","hooks/useForm.js","components/genero/FormAgregarGenero.js","components/genero/GeneroCard.js","pages/GeneroPage.js","pages/HomePage.js","actions/libros.js","actions/personas.js","components/libro/LibroCard.js","components/genero/BuscarPorGenero.js","components/libro/FormAgregarLibros.js","components/libro/SearchLibros.js","pages/LibroPage.js","components/persona/LibrosPrestados.js","components/persona/PersonaCard.js","pages/PersonaPage.js","router/AppRouter.js","reducers/generoReducer.js","reducers/libroReducer.js","reducers/personaReducer.js","reducers/rootReducer.js","store/store.js","BooksApp.js","index.js"],"names":["Navbar","to","types","baseUrl","process","startCargarGeneros","dispatch","a","axios","get","status","data","cargarGeneros","categorias","console","log","mensaje","generos","type","payload","borrarGenero","id","crearGenero","genero","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","nombre","FormAgregarGenero","useDispatch","formValues","onSubmit","e","preventDefault","post","categoria","startCrearGenero","onChange","placeholder","autoComplete","GeneroCard","_id","onClick","delete","startBorrarGenero","GeneroPage","useSelector","state","useEffect","map","HomePage","startCargarLibros","cargarLibros","libros","borrarLibro","devolverLibro","prestarLibro","persona_id","crearLibro","libro","actualizarLibro","startCargarPersonas","cargarPersonas","personas","borrarPersona","actualizarPersona","persona","LibroCard","setLibro","descripcion","setPersona","prestando","setPrestando","desc","onPrestamo","body","put","startPrestarLibro","libroEncontrado","find","lib","personaEncontrada","p","startDevolverLibro","startBorrarLibro","startActualizarLibro","BuscarPorGenero","setGenero","librosPorGenero","setlibrosPorGenero","mostarLibros","setMostarLibros","generoChange","event","hidden","onSelect","filter","categoria_id","FormAgregarLibros","startCrearLibro","SearchLibros","searchText","librosFiltrados","setLibrosFiltrados","busquedaTerminada","setBusquedaTerminada","length","libroBuscado","toUpperCase","librosEncontrados","includes","className","LibroPage","LibrosPrestados","librosPersona","setlibrosPersona","active","setActive","nuevosLibros","PersonaCard","apellido","alias","email","surname","userTag","startBorrarPersona","startActualizarpersona","PersonaPage","AppRouter","exact","path","component","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BooksApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.718fa6ca.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n    return (\n        <div>\n            <h1>Navbar</h1>\n            <span>\n                <Link to='/persona'>  personas  </Link>\n            </span>\n            <span>\n                <Link to='/libro'>  libros  </Link>\n            </span>\n            <span>\n                <Link to='/genero'>  generos  </Link>\n            </span>\n\n            <br></br>\n            <hr></hr>\n        </div>\n    )\n}\n","export const types = {\n\n    //Libros\n    libroLoad: \"[libro] Cargar Libros\",\n    libroNew: \"[libro] Agregar Libro\",\n    libroLend: \"[libro] Prestar Libro\",\n    libroReturn: \"[libro] Devolver Libro\",\n    libroDelete: \"[libro] Borrar Libro\",\n    libroUpdate: \"[libro] Actualizar Libro\",\n\n    //Generos\n    generoLoad: \"[genero] Cargar Generos\",\n    generoNew: \"[genero] Agregar Genero\",\n    generoDelete: \"[genero] Borrar Genero\",\n\n    //Personas\n    personaLoad: \"[persona] Cargar personas\",\n    personaNew: \"[persona] Agregar persona\",\n    personaDelete: \"[persona] Borrar persona\",\n    personaUpdate: \"[persona] Actualizar persona\",\n    personaSearchLibros: \"[persona] Buscar libros por persona\",\n};","import { types } from \"../types/types\"\nimport axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const startCargarGeneros = () => {\n\n    return async (dispatch) => {\n\n        const { status, data } = await axios.get(`${baseUrl}/categoria`);\n\n        if (status === 200) {\n            dispatch(cargarGeneros(data.categorias));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nconst cargarGeneros = (generos) => ({\n    type: types.generoLoad,\n    payload: generos,\n});\n\nexport const startBorrarGenero = (id) => {\n\n    return async (dispatch) => {\n\n        const { status, data } = await axios.delete(`${baseUrl}/categoria/${id}`);\n\n        if (status === 200) {\n            dispatch(borrarGenero(id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nconst borrarGenero = (id) => ({\n    type: types.generoDelete,\n    payload: id,\n});\n\nexport const startCrearGenero = (nombre) => {\n\n    return async (dispatch) => {\n\n        const genero = {\n            nombre,\n        };\n\n        const { status, data } = await axios.post(`${baseUrl}/categoria`, genero);\n\n        if (status === 200) {\n            dispatch(crearGenero(data.categoria));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nconst crearGenero = (genero) => ({\n    type: types.generoNew,\n    payload: genero,\n});","import { useState } from 'react';\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startCrearGenero } from '../../actions/generos';\nimport { useForm } from '../../hooks/useForm';\n\nconst initialState = {\n    nombre: \"\",\n};\n\nexport const FormAgregarGenero = () => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm(initialState);\n\n    const { nombre } = formValues;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startCrearGenero(nombre));\n        reset();\n    };\n\n    return (\n        <div>\n            <h2>Agregar genero</h2>\n\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"nombre\" onChange={handleInputChange} value={nombre} placeholder=\"Ingresar nombre\" autoComplete=\"off\"></input>\n                <button type=\"submit\"> Hecho </button>\n            </form>\n\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startBorrarGenero } from '../../actions/generos';\n\nexport const GeneroCard = ({ nombre, _id: id }) => {\n\n    const dispatch = useDispatch();\n\n    const onBorrar = () => {\n        dispatch(startBorrarGenero(id));\n    };\n\n    return (\n        <div>\n            <h2>{nombre}</h2>\n\n            <button\n                onClick={onBorrar}\n            >\n                Borrar\n            </button>\n\n\n            <br></br>\n\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCargarGeneros } from '../actions/generos';\nimport { FormAgregarGenero } from '../components/genero/FormAgregarGenero';\nimport { GeneroCard } from '../components/genero/GeneroCard';\n\nexport const GeneroPage = () => {\n\n    const dispatch = useDispatch();\n\n    const { generos } = useSelector(state => state.genero);\n\n    useEffect(() => {\n        dispatch(startCargarGeneros());\n    }, [dispatch]);\n\n\n    return (\n        <div>\n            <h1>Genero Page</h1>\n\n            <FormAgregarGenero />\n\n            {\n                generos?.map(genero => (\n                    <GeneroCard\n                        key={genero._id}\n                        {...genero}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const HomePage = () => {\n    return (\n        <div>\n            <h1>HomePage</h1>\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\nimport axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const startCargarLibros = () => {\n\n    return async (dispatch) => {\n\n        const { status, data } = await axios.get(`${baseUrl}/libro`);\n\n        if (status === 200) {\n            dispatch(cargarLibros(data.libros))\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nexport const cargarLibros = (libros) => ({\n    type: types.libroLoad,\n    payload: libros,\n})\n\nexport const startBorrarLibro = (id) => {\n    return async (dispatch) => {\n\n        const { status, data } = await axios.delete(`${baseUrl}/libro/${id}`);\n\n        if (status === 200) {\n            dispatch(borrarLibro(id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n\n}\n\nexport const borrarLibro = (id) => ({\n    type: types.libroDelete,\n    payload: id,\n})\n\n\nexport const startDevolverLibro = (id) => {\n    return async (dispatch) => {\n\n        const state = {\n            id\n        }\n\n        const { status, data } = await axios.put(`${baseUrl}/libro/devolver/${id}`, state);\n\n        if (status === 200) {\n            dispatch(devolverLibro(id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n}\n\nexport const devolverLibro = (id) => ({\n    type: types.libroReturn,\n    payload: id,\n})\n\n\nexport const startPrestarLibro = (id, persona_id) => {\n    return async (dispatch) => {\n\n        const body = {\n            persona_id\n        }\n\n        const { status, data } = await axios.put(`${baseUrl}/libro/prestar/${id}`, body);\n\n        if (status === 200) {\n            dispatch(prestarLibro(id, persona_id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n}\n\nexport const prestarLibro = (id, persona_id) => ({\n    type: types.libroLend,\n    payload: {\n        id,\n        persona_id\n    },\n});\n\nexport const startCrearLibro = (nombre, descripcion, categoria_id) => {\n\n    return async (dispatch) => {\n\n        const libro = {\n            nombre,\n            descripcion,\n            categoria_id,\n        };\n\n        const { status, data } = await axios.post(`${baseUrl}/libro`, libro);\n\n        if (status === 200) {\n            dispatch(crearLibro(data.libro))\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\n\nexport const crearLibro = (libro) => ({\n    type: types.libroNew,\n    payload: libro\n});\n\nexport const startActualizarLibro = (id, descripcion) => {\n    return async (dispatch) => {\n\n        const libro = {\n            descripcion\n        };\n\n        const { status, data } = await axios.put(`${baseUrl}/libro/${id}`, libro);\n\n        if (status === 200) {\n            dispatch(actualizarLibro(id, data.libro))\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nexport const actualizarLibro = (id, libro) => ({\n    type: types.libroUpdate,\n    payload: {\n        id,\n        libro,\n    }\n})\n","import { types } from \"../types/types\"\nimport axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const startCargarPersonas = () => {\n\n    return async (dispatch) => {\n\n        try {\n            const { data } = await axios.get(`${baseUrl}/persona`);\n            dispatch(cargarPersonas(data.personas))\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n}\n\nconst cargarPersonas = (personas) => ({\n    type: types.personaLoad,\n    payload: personas,\n})\n\nexport const startBorrarPersona = (id) => {\n    return async (dispatch) => {\n\n        try {\n            await axios.delete(`${baseUrl}/persona/${id}`);\n            dispatch(borrarPersona(id));\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst borrarPersona = (id) => ({\n    type: types.personaDelete,\n    payload: id,\n})\n\nexport const startCrearpersona = (nombre, apellido, alias, email,) => {\n\n    return async (dispatch) => {\n\n        const persona = {\n            nombre,\n            apellido,\n            alias,\n            email,\n        };\n\n        try {\n            const { data } = await axios.post(`${baseUrl}/persona`, persona);\n            dispatch(crearPersona(data.persona))\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\n\nconst crearPersona = (persona) => ({\n    type: types.personaNew,\n    payload: persona\n});\n\n\nexport const startActualizarpersona = (id, nombre, apellido, alias) => {\n    return async (dispatch) => {\n\n        const persona = {\n            nombre,\n            apellido,\n            alias\n        };\n\n        try {\n            const { data } = await axios.put(`${baseUrl}/persona/${id}`, persona);\n            dispatch(actualizarPersona(id, data.persona))\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst actualizarPersona = (id, persona) => ({\n    type: types.personaUpdate,\n    payload: {\n        id,\n        persona,\n    }\n})\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startActualizarLibro, startBorrarLibro, startDevolverLibro, startPrestarLibro } from '../../actions/libros';\n\nexport const LibroCard = ({ id }) => {\n\n    const dispatch = useDispatch();\n\n    const { personas } = useSelector(state => state.persona);\n    const { libros } = useSelector(state => state.libro);\n\n    const [libro, setLibro] = useState({});\n\n    const { nombre, descripcion, persona_id } = libro;\n\n    const [persona, setPersona] = useState({});\n\n    const [prestando, setPrestando] = useState(false);\n\n    const [formValues, handleInputChange, reset] = useForm({\n        descripcion: \"\",\n    });\n\n    const { descripcion: desc } = formValues;\n\n    const onPrestar = () => {\n        prestando ? setPrestando(false) : setPrestando(true);\n    };\n\n    const onPrestamo = (persona_id) => {\n        dispatch(startPrestarLibro(id, persona_id));\n        setPrestando(false);\n    }\n\n    const onDevolver = () => {\n        dispatch(startDevolverLibro(id));\n    };\n\n    const onBorrar = () => {\n        dispatch(startBorrarLibro(id))\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startActualizarLibro(id, desc))\n        reset();\n    }\n\n    useEffect(() => {\n\n        const libroEncontrado = libros.find(lib => lib._id === id);\n        setLibro(libroEncontrado);\n\n    }, [id, libros])\n\n\n    useEffect(() => {\n\n        const personaEncontrada = personas.find(p => p._id === persona_id);\n        setPersona(personaEncontrada);\n\n    }, [persona_id, personas])\n\n\n    return (\n        <div>\n            <h2>Nombre:</h2>\n            <p>{nombre}</p>\n\n            <h2>Descripcion: </h2>\n            <p>{descripcion}</p>\n\n            {\n                persona &&\n                (<div>\n                    <h2>Prestado a</h2>\n                    <p>{persona.nombre}</p>\n                </div>\n                )\n            }\n\n\n            <button\n                onClick={onPrestar}\n            >\n                Prestar a\n            </button>\n\n            {\n                prestando &&\n                personas.map((persona) => (\n                    <div\n                        key={persona._id}\n                        onClick={() => onPrestamo(persona._id)}\n                    >\n                        {persona.nombre}\n                    </div>\n                ))\n            }\n\n            <button\n                onClick={onDevolver}\n            >\n                Devolver\n            </button>\n            <button\n                onClick={onBorrar}\n            >\n                Borrar\n            </button>\n\n            <h3>Actualizar</h3>\n\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" name=\"descripcion\" onChange={handleInputChange} value={desc} placeholder=\"Ingresar descripcion\" autoComplete=\"off\"></input>\n                <button type=\"submit\"> Hecho </button>\n            </form>\n\n            <br></br>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { LibroCard } from '../libro/LibroCard';\n\nexport const BuscarPorGenero = () => {\n\n    const [genero, setGenero] = useState(\"\");\n\n    const [librosPorGenero, setlibrosPorGenero] = useState([]);\n\n    const [mostarLibros, setMostarLibros] = useState(false);\n\n    const { generos } = useSelector(state => state.genero);\n\n    const { libros } = useSelector(state => state.libro);\n\n    const generoChange = (event) => {\n        setGenero(event.target.value);\n    };\n\n    const buscarLibros = () => {\n        setlibrosPorGenero(libros.filter(libro => libro.categoria_id === genero));\n        setMostarLibros(true);\n    };\n\n    return (\n        <div>\n            <h2>Buscar libros por genero: </h2>\n\n            <select value={genero} onChange={generoChange}>\n                <option hidden> Seleccione un genero </option>\n                {\n                    generos.map(genero => (\n                        <option\n                            value={genero._id}\n                            key={genero._id}\n                            onSelect={generoChange}\n                        >\n                            {genero.nombre}\n                        </option>\n                    ))\n                }\n            </select>\n\n            <button onClick={buscarLibros}>\n                Buscar\n            </button>\n\n            {\n                (mostarLibros) &&\n                librosPorGenero.map(libro => (\n                    <LibroCard\n                        key={libro._id}\n                        id={libro._id}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCrearLibro } from '../../actions/libros';\nimport { useForm } from '../../hooks/useForm';\n\nconst initialState = {\n    nombre: \"\",\n    descripcion: \"\",\n    categoria: \"\",\n    persona: \"\"\n\n};\n\nexport const FormAgregarLibros = () => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm(initialState);\n\n    const { nombre, descripcion } = formValues;\n\n    const { generos } = useSelector(state => state.genero);\n\n    const [genero, setGenero] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startCrearLibro(nombre, descripcion, genero))\n        reset();\n    };\n\n    const generoChange = (event) => {\n        setGenero(event.target.value);\n    };\n\n    return (\n        <div>\n            <h2>Agregar libro</h2>\n\n            <form onSubmit={handleSubmit}>\n\n                <input type=\"text\" name=\"nombre\" onChange={handleInputChange} value={nombre} placeholder=\"Ingresar nombre\" autoComplete=\"off\"></input>\n\n                <input type=\"text\" name=\"descripcion\" onChange={handleInputChange} value={descripcion} placeholder=\"Ingresar descripcion\" autoComplete=\"off\"></input>\n\n                <select value={genero} onChange={generoChange}>\n                    <option hidden> Seleccione un genero </option>\n                    {\n                        generos.map(genero => (\n                            <option\n                                value={genero._id}\n                                key={genero._id}\n                            >\n                                {genero.nombre}\n                            </option>\n                        ))\n                    }\n                </select>\n\n                <button type=\"submit\"> Hecho </button>\n            </form>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { LibroCard } from './LibroCard';\n\nexport const SearchLibros = () => {\n\n    const [formValues, handleInputChange] = useForm({\n        searchText: \"\"\n    });\n\n    const { libros } = useSelector(state => state.libro);\n\n    const [librosFiltrados, setLibrosFiltrados] = useState([]);\n    const [busquedaTerminada, setBusquedaTerminada] = useState(false);\n\n    const { searchText } = formValues;\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n\n        if (searchText.length > 0) {\n            const libroBuscado = searchText.toUpperCase();\n\n            // const librosEncontrados = libros.filter(libro => libro.nombre === libroBuscado);\n            const librosEncontrados = libros.filter(libro => libro.nombre.includes(libroBuscado));\n            setLibrosFiltrados(librosEncontrados);\n            setBusquedaTerminada(true);\n        }\n    }\n\n    return (\n        <div>\n            <h2> Buscar libro </h2>\n\n            <form onSubmit={handleSearch}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Buscar libro por nombre\"\n                    name=\"searchText\"\n                    autoComplete=\"off\"\n                    value={searchText}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn m-1 btn-block btn-outline-primary\"\n                >\n                    Buscar...\n                </button>\n            </form>\n            <div>\n                {\n                    (busquedaTerminada && librosFiltrados.length === 0)\n                    && <div>\n                        El libro no se encuentra\n                    </div>\n                }\n\n                {\n                    librosFiltrados.map(libro => (\n                        <LibroCard\n                            key={libro._id}\n                            id={libro._id}\n                        />\n                    ))\n                }\n\n            </div>\n            <hr />\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCargarGeneros } from '../actions/generos';\nimport { startCargarLibros } from '../actions/libros';\nimport { startCargarPersonas } from '../actions/personas';\nimport { BuscarPorGenero } from '../components/genero/BuscarPorGenero';\nimport { FormAgregarLibros } from '../components/libro/FormAgregarLibros';\nimport { LibroCard } from '../components/libro/LibroCard';\nimport { SearchLibros } from '../components/libro/SearchLibros';\n\n\nexport const LibroPage = () => {\n\n    const dispatch = useDispatch();\n\n    const { libros } = useSelector(state => state.libro);\n\n    useEffect(() => {\n        dispatch(startCargarLibros());\n        dispatch(startCargarPersonas());\n        dispatch(startCargarGeneros());\n    }, [dispatch]);\n\n    return (\n        <div>\n\n            <SearchLibros />\n\n            <FormAgregarLibros />\n\n            <h1>LibroPage</h1>\n\n            {\n                libros?.map(libro => (\n                    <LibroCard\n                        key={libro._id}\n                        id={libro._id}\n                    />\n                ))\n            }\n\n            <BuscarPorGenero />\n\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { LibroCard } from '../libro/LibroCard';\n\nexport const LibrosPrestados = ({ id }) => {\n\n    const { libros } = useSelector(state => state.libro);\n\n    const [librosPersona, setlibrosPersona] = useState([]);\n\n    const [active, setActive] = useState(false);\n\n    const onClick = () => {\n        const nuevosLibros = libros.filter(libro => libro.persona_id === id);\n        setlibrosPersona(nuevosLibros)\n        setActive(true);\n    };\n\n    return (\n        <div>\n            <br></br>\n            <button\n                onClick={onClick}\n            >\n                Cargar libros de la persona\n            </button>\n            {\n                (active) &&\n\n                librosPersona?.map(libro => (\n                    <LibroCard\n                        key={libro._id}\n                        id={libro._id}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startActualizarpersona, startBorrarPersona } from '../../actions/personas';\nimport { useForm } from '../../hooks/useForm';\nimport { LibrosPrestados } from './LibrosPrestados';\n\nexport const PersonaCard = ({ nombre, apellido, alias, email, _id: id }) => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm({\n        name: \"\",\n        surname: \"\",\n        userTag: \"\",\n    });\n\n    const { name, surname, userTag } = formValues;\n\n    const onBorrar = () => {\n        dispatch(startBorrarPersona(id))\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startActualizarpersona(id, name, surname, userTag));\n        reset();\n    }\n\n    return (\n        <div>\n            <h2>Nombre :</h2>\n            <p>{nombre}</p>\n\n            <h2>Apellido: </h2>\n            <p>{apellido}</p>\n\n            <h2>Alias :</h2>\n            <p>{alias}</p>\n\n            <h2>Email: </h2>\n            <p>{email}</p>\n\n            <button\n                onClick={onBorrar}\n            >\n                Borrar\n            </button>\n\n            <h3>Actualizar</h3>\n\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" name=\"name\" onChange={handleInputChange} value={name} placeholder=\"Ingresar nombre\" autoComplete=\"off\"></input>\n                <input type=\"text\" name=\"surname\" onChange={handleInputChange} value={surname} placeholder=\"Ingresar apellido\" autoComplete=\"off\"></input>\n                <input type=\"text\" name=\"userTag\" onChange={handleInputChange} value={userTag} placeholder=\"Ingresar alias\" autoComplete=\"off\"></input>\n                <button type=\"submit\"> Hecho </button>\n            </form>\n\n            <LibrosPrestados id={id} />\n\n            <br></br>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startCargarLibros } from '../actions/libros';\nimport { startCargarPersonas } from '../actions/personas';\nimport { PersonaCard } from '../components/persona/PersonaCard';\n\nexport const PersonaPage = () => {\n\n    const dispatch = useDispatch();\n\n    const { personas } = useSelector(state => state.persona);\n\n    useEffect(() => {\n        dispatch(startCargarPersonas());\n        dispatch(startCargarLibros())\n    }, [dispatch]);\n\n    return (\n        <div>\n            <h1>PersonaPage</h1>\n\n            {\n                personas?.map(persona => (\n                    <PersonaCard\n                        key={persona._id}\n                        {...persona}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n    Route\n} from \"react-router-dom\";\nimport { Navbar } from '../components/Navbar';\nimport { GeneroPage } from '../pages/GeneroPage';\n\nimport { HomePage } from '../pages/HomePage';\nimport { LibroPage } from '../pages/LibroPage';\nimport { PersonaPage } from '../pages/PersonaPage';\n\n\nexport const AppRouter = () => {\n\n\n    return (\n\n        <Router>\n            <Navbar />\n\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n\n                <Route exact path=\"/persona\" component={PersonaPage} />\n                <Route exact path=\"/genero\" component={GeneroPage} />\n                <Route exact path=\"/libro\" component={LibroPage} />\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n\n    )\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    generos: [],\n}\n\nexport const generoReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.generoLoad:\n            return {\n                ...state,\n                generos: action.payload,\n            };\n\n        case types.generoDelete:\n            return {\n                ...state,\n                generos: state.generos.filter(genero => genero._id !== action.payload),\n            };\n\n        case types.generoNew:\n            return {\n                ...state,\n                generos: [action.payload, ...state.generos]\n            };\n\n        default:\n            return state;\n    }\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    libros: [],\n}\n\nexport const libroReducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case types.libroLoad:\n            return {\n                ...state,\n                libros: action.payload,\n            };\n\n        case types.libroDelete:\n            return {\n                ...state,\n                libros: state.libros.filter(libro => libro._id !== action.payload),\n            };\n\n        case types.libroReturn:\n            return {\n                ...state,\n                libros: state.libros.map(libro => {\n                    if (libro._id === action.payload) {\n                        libro.persona_id = null;\n                    }\n\n                    return libro;\n                }),\n            };\n\n        case types.libroLend:\n            return {\n                ...state,\n                libros: state.libros.map(libro => {\n                    if (libro._id === action.payload.id) {\n                        libro.persona_id = action.payload.persona_id;\n                    }\n\n                    return libro;\n                }),\n            };\n\n        case types.libroNew:\n            return {\n                ...state,\n                libros: [action.payload, ...state.libros]\n            };\n\n        case types.libroUpdate:\n            return {\n                ...state,\n                libros: state.libros.map(libro => {\n                    if (libro._id === action.payload.id) {\n                        libro = action.payload.libro;\n                    }\n\n                    return libro;\n                }),\n            };\n\n        default:\n            return state;\n    };\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    personas: [],\n};\n\nexport const personaReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.personaLoad:\n            return {\n                ...state,\n                personas: action.payload,\n            };\n\n        case types.personaDelete:\n            return {\n                ...state,\n                personas: state.personas.filter(persona => persona._id !== action.payload),\n            };\n\n        case types.personaNew:\n            return {\n                ...state,\n                personas: [action.payload, ...state.personas]\n            };\n\n        case types.personaUpdate:\n            return {\n                ...state,\n                personas: state.personas.map(persona => {\n                    if (persona._id === action.payload.id) {\n                        persona = action.payload.persona;\n                    }\n\n                    return persona;\n                }),\n            };\n\n        default:\n            return state;\n    };\n};","import { combineReducers } from 'redux'\nimport { generoReducer } from './generoReducer';\nimport { libroReducer } from './libroReducer';\nimport { personaReducer } from './personaReducer';\n\nexport const rootReducer = combineReducers({\n    libro: libroReducer,\n    persona: personaReducer,\n    genero: generoReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const BooksApp = () => {\n    return (\n        <div>\n            <Provider store={store}>\n                <AppRouter />\n            </Provider>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BooksApp } from './BooksApp';\nimport './index.css';\n\nReactDOM.render(\n  <BooksApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}